@page "/login"

@inject IAuthService AuthService
@inject IUriHelper UriHelper

<h1>Вход</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Пожалуйста, введите свои учетные данные</h5>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationErrors Model="loginModel" />
            <div class="form-group">
                <label for="email">Имя пользователя</label>
                <InputText Id="username" Class="form-control" @bind-Value="loginModel.Username" />
                
            </div>
            <div class="form-group">
                <label for="password">Пароль</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />                
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private LoginViewModel loginModel = new LoginViewModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            UriHelper.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}