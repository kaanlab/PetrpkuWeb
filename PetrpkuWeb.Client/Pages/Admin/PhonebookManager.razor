@page "/phonebookmanager"

@inject HttpClient HttpClient
@inject IMatToaster Toaster




<div class="row">
    <h2 class="col-12 mb-4 text-center">Редактирование телефонного справочника</h2>
    @if (AppUsersList is null)
    {
        <div class="spinner-border text-primary text-center" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }
    else if (AppUsersList.Count == 0)
    {
        <div class="card border-danger mb-3">
            <div class="card-body">
                <p class="card-text">No users...</p>
            </div>
        </div>
    }
    else
    {
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Ф.И.О.</th>
                    <th scope="col">Фамилия</th>
                    <th scope="col">Имя</th>
                    <th scope="col">Отчество</th>
                    <th scope="col">Подразделение</th>
                    <th scope="col">Должность</th>
                    <th scope="col">Кабинет</th>
                    <th scope="col">Внутр.номер</th>
                    <th scope="col">Корпус</th>
                    <th></th>

                </tr>
            </thead>
            @foreach (var user in AppUsersList)
            {
                <tr>
                    <td>@user.DisplayName</td>
                    <td>@user.LastName</td>
                    <td>@user.FirstName</td>
                    <td>@user.MidleName</td>
                    <td>@user.Department.Name</td>
                    <td>@user.WorkingPosition</td>
                    <td>@user.Room</td>
                    <td>@user.IntPhone</td>
                    <td>@user.Building.Name</td>
                    <td><MatButton Outlined="true" Icon="edit" OnClick="@(() => OpenEditAppUserDialog(user.AppUserId))" Label="Удалить" /></td>
                </tr>
            }
        </table>
    }
</div>

@if (EditAppUser is { })
{
    <EditForm Model="@EditAppUser">
        <MatDialog @bind-IsOpen="@editAppUserDialogIsOpen">
            <MatDialogTitle>Редактирование информации о пользователе @EditAppUser.DisplayName</MatDialogTitle>
            <MatDialogContent>
                <MatTextField Label="Фамилия" @bind-Value="@EditAppUser.LastName"></MatTextField>
                <MatTextField Label="Имя" @bind-Value="@EditAppUser.FirstName"></MatTextField>
                <MatTextField Label="Отчество" @bind-Value="@EditAppUser.MidleName"></MatTextField>
                <select @bind="@EditAppUser.DepartmentId">
                    @if (departments is null)
                    {
                        <option value="">(loading...)</option>
                    }
                    else
                    {                        
                        @foreach (var department in departments)
                        {
                            <option value="@department.DepartmentId"> @department.Name</option>
                        }
                    }
                </select>
                <MatTextField Label="Должность" @bind-Value="@EditAppUser.WorkingPosition"></MatTextField>
                <MatTextField Label="Кабинет" @bind-Value="@EditAppUser.Room"></MatTextField>
                <MatTextField Label="Внутренний телефон" @bind-Value="@EditAppUser.IntPhone"></MatTextField>
                <select @bind="@EditAppUser.BuildingId">
                    @if (buildings is null)
                    {
                        <option value="">(loading...)</option>
                    }
                    else
                    {                        
                        @foreach (var building in buildings)
                        {
                            <option value="@building.BuildingId">@building.Name</option>
                        }
                    }
                </select>
            </MatDialogContent>
            <MatDialogActions>
                <MatButton Icon="undo" OnClick="@(e => { editAppUserDialogIsOpen = false; })" Label="Отмена" />
                <MatButton Icon="check" Type="submit" OnClick="@(() => UpdateAppUser(EditAppUser.AppUserId))" Label="Добавить" />
            </MatDialogActions>
        </MatDialog>
    </EditForm>
}


@code {

    private List<AppUser> AppUsersList { get; set; }
    private AppUser EditAppUser { get; set; }

    List<Department> departments;
    List<Building> buildings;

    bool editAppUserDialogIsOpen = false;

    protected async override Task OnInitializedAsync()
    {
        AppUsersList = await HttpClient.GetJsonAsync<List<AppUser>>("api/phonebook/all");
        departments = await HttpClient.GetJsonAsync<List<Department>>("api/phonebook/departments/all");
        buildings = await HttpClient.GetJsonAsync<List<Building>>("api/phonebook/buildings/all");
    }

    void OpenEditAppUserDialog(int appUserId)
    {
        editAppUserDialogIsOpen = true;
        EditAppUser = AppUsersList.FirstOrDefault(u => u.AppUserId == appUserId);
    }

    async Task UpdateAppUser(int appUserId)
    {
        editAppUserDialogIsOpen = false;
        var response = await HttpClient.PutJsonAsync<AppUser>($"api/phonebook/update/{appUserId}", EditAppUser);
        var index = AppUsersList.FindIndex(u => u.AppUserId == response.AppUserId);
        AppUsersList[index] = response;
        Toaster.Add($"Информация о пользователе {response.DisplayName} успешно обновлена", MatToastType.Success, "Успех!");
    }
}
