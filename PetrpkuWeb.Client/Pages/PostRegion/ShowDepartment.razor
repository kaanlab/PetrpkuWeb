@page "/department/{DepartmentId:int}"

@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IMatToaster Toaster


@if (department is { })
{
    <h2 class="col-12 mb-4 text-center">@department.Name</h2>

    @if (department.AppUsersView.Any())
    {
        <div class="row mb-2">
            <ul class="user-profiles-list-small">
                @foreach (var user in department.AppUsersView.Where(u => u.IsActive))
                {
                    <li @key="user">
                        <div class="user-avatar">
                            <a href="/user/@user.Id">
                                <img src="@user.Avatar" width="48" />
                            </a>
                        </div>
                        <p class="user-name">
                            <a href="/user/@user.Id">@user.DisplayName</a>
                            <span>@user.WorkingPosition</span>
                        </p>
                    </li>
                }
            </ul>
        </div>
    }

    <div class="row mb-2">
        @if (department.AppUsersView.SingleOrDefault(u => u.Id == authUserId) is { })
        {
            <div class="col-12">
                <MatButton Icon="add" Raised="true" Label="Создать" Link="/post/create" Class="float-right" />
            </div>
        }
    </div>
}

@if (posts is null)
{
    <div class="spinner-border text-primary text-center" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}
else if (posts.Count == 0)
{
    <div class="card border-danger mb-3">
        <div class="card-body">
            <p class="card-text">новостей нет</p>
        </div>
    </div>
}
else
{
    <div class="card-columns">
        @foreach (var post in posts)
        {
            <div @key="post" class="card">
                <img class="card-img-top" src="@post.Poster">
                <div class="card-body">
                    <h5 class="card-title">@post.Title</h5>
                    <span class="card-text">@post.Content.Truncate(240)</span>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="media col-8">
                            <div class="media-body">
                                <p class="mt-0">@post.AppUserView.FirstName @post.AppUserView.LastName</p>
                                <p class="card-text"><small class="text-muted"> @post.PublishDate</small></p>
                            </div>
                        </div>
                        @if (post.AttachmentsView.Any())
                        {
                            <div class="col-4">
                                <small class="text-muted">Файлы: <span class="badge badge-pill badge-secondary">@post.AttachmentsView.Count()</span></small>
                            </div>
                        }
                    </div>
                </div>
                <a class="stretched-link" href="/posts/show/@post.PostId"></a>
            </div>
        }
    </div>
}


@code {

    [Parameter]
    public int DepartmentId { get; set; }

    //[CascadingParameter]
    //private Task<AuthenticationState> authenticationStateTask { get; set; }

    string authUserId;
    DepartmentAppUsersPostsView department;
    List<PostAppUserDepartmentAttachmentsView> posts;

    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var authUser = authState.User;

        if (authUser.Identity.IsAuthenticated)
        {
            authUserId = authUser.Claims.FirstOrDefault(c => c.Type == ClaimTypes.UserData).Value;
        }
        
    }

    protected override async Task OnParametersSetAsync()
    {
        department = await HttpClient.GetJsonAsync<DepartmentAppUsersPostsView>($"{ApiRoutes.Departments.SHOW}/{DepartmentId}");
        posts = await HttpClient.GetJsonAsync<List<PostAppUserDepartmentAttachmentsView>>($"{ApiRoutes.Post.DEPARTMENT}/{DepartmentId}");
    }

}
