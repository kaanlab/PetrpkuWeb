@page "/dutylist"

@using System.Globalization
@inject HttpClient HttpClient


<div class="row">
    <h2 class="col-12 mb-4 text-center">График дежурства руководящего состава ППКУ на @title.ToString("MMMM yyyy").ToLower() г.</h2>
</div>
<div class="row">
    <div class="col-10">
        <div class="row d-none d-lg-flex p-1 bg-dark text-white">
            @if (daysOfWeek is { })
            {
                @foreach (var weekday in daysOfWeek)
                {
                    <div class="col-lg p-1 text-center">@weekday</div>
                }
            }
        </div>
        <div class="row border border-right-0 border-bottom-0">
            @if (days is { })
            {
                @foreach (var day in days)
                {

                    if (day.DayOfWeek == DayOfWeek.Monday && day != startDate)
                    {
                        <div class="w-100"></div>
                    }

                    <div class="col-lg p-2 border border-left-0 border-top-0 @(day.Month != currentMonth.Month ? mutedClass : null)">
                        <h5 class="row align-items-center">
                            <span class="col-1">@day.Day</span>
                        </h5>
                        <div style="min-height:5rem;">
                            @if (listOfDuty is { })
                            {
                                @foreach (var user in listOfDuty)
                                {
                                    if (user.DayOfDuty.DayOfYear == day.DayOfYear)
                                    {
                                        <img src="@user.AssignedTo.Avatar.Path" class="rounded-circle mr-3" style="width: 3rem;">
                                        <h5 class="mt-0">@user.AssignedTo.DisplayName</h5>
                                        <p class="card-text"><small class="text-muted"> @user.AssignedTo.WorkingPosition</small></p>
                                    }
                                }
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-2 mt-2">
        <div class="mb-2">
            <MatDatePicker Label="Выберете месяц" Outlined="true" @bind-Value="@PikDate" DateFormat="d-m-Y" />
        </div>
        <MatButton Raised="true" Icon="done" Label="Применить" OnClick="@(() => GetCalendarAsync(PikDate.Value.Month,PikDate.Value.Year))"></MatButton>
    </div>
</div>


@code {

    public DateTime? PikDate { get; set; } = DateTime.Now.ToLocalTime();

    DateTime title = DateTime.Now;
    List<Duty> listOfDuty;
    List<string> daysOfWeek;
    List<DateTime> days;
    DateTime startDate;
    DateTime currentMonth;

    string mutedClass = "d-none d-lg-inline-block bg-light text-muted";


    protected async override Task OnInitializedAsync()
    {
        var year = PikDate.Value.Year;
        var month = PikDate.Value.Month;

        await GetCalendarAsync(month, year);
    }


    async Task GetCalendarAsync(int month, int year)
    {
        listOfDuty = await HttpClient.GetJsonAsync<List<Duty>>($"api/duty/month/{month}/{year}");

        daysOfWeek = Enum.GetValues(typeof(DayOfWeek))
            .Cast<DayOfWeek>()
            .OrderBy(day => day < DayOfWeek.Monday)
            .Select(d => CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(d)).ToList();

        currentMonth = new DateTime(year, month, 1);
        // Start calendar from one week earlier
        // TODO: need to simplify. Too hacky
        startDate = currentMonth.AddDays(-6 - (int)currentMonth.DayOfWeek);
        days = Enumerable.Range(0, 42).Select(i => startDate.AddDays(i)).ToList();
        title = PikDate.Value;
    }
}
