@inject HttpClient HttpClient


<table class="table">
    <tbody>
        <ListTemplate Loader="@LoadMessages">
            <LoadingContent>
                <tr>
                    <td class="preloader-wrapper big active">
                        <div class="spinner-layer spinner-blue-only">
                            <div class="circle-clipper left">
                                <div class="circle"></div>
                            </div><div class="gap-patch">
                                <div class="circle"></div>
                            </div><div class="circle-clipper right">
                                <div class="circle"></div>
                            </div>
                        </div>
                    </td>
                </tr>
            </LoadingContent>
            <EmptyContent>
                <tr>
                    <td>Нет заявок...</td>
                </tr>
            </EmptyContent>
            <ItemContent Context="item">
                <tr @key="item">
                    <td>@item.Author.DisplayName</td>
                    <td>@item.Section.Name</td>
                    <td>@item.Subsection.Title</td>
                    <td>@item.Title.Truncate(50)</td>
                    <td>@item.CreateDate.ToShortDateString()</td>
                    <td>
                        @if (item.IsApproved)
                        {
                            <span class="badge badge-success">Согласован</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Согласовать</span>
                        }
                        @if (item.IsChecked)
                        {
                            <span class="badge badge-success">Проверен</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Проверить</span>
                        }
                        @if (item.IsSent)
                        {
                            <span class="badge badge-success">Отправлен</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Отпраить</span>
                        }
                        @if (item.IsPublished)
                        {
                            <span class="badge badge-success">Опубликован</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Не опубликован</span>
                        }

                    </td>
                    <td>
                        <MatButton Icon="edit" Link="@($"/message/edit/{item.MessageId}")" />
                    </td>
                </tr>
            </ItemContent>
        </ListTemplate>
    </tbody>
</table>


@code {

    async Task<List<Message>> LoadMessages()
    {
        return await HttpClient.GetJsonAsync<List<Message>>("api/messages/all");
    }
}