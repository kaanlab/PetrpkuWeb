@inject HttpClient HttpClient


<nav class="navbar navbar-dark navbar-expand-lg nav-bgfoto" id="sticky-nav">
    <a class="navbar-brand mr-3">
        <img src="/img/site/logo.png" width="30" height="30" alt="">
        <span>Петрозаводское ПКУ</span>
    </a>
    <button class="navbar-toggler" aria-label="Toggle navigation" @onclick="() => ToggleNavMenu()">
        <MatIcon id="toggler-button">apps</MatIcon>
    </button>
    <div class="@navMenuCssClass">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">Главная</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="dutylist" Match="NavLinkMatch.All">Дежурные</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="phonebook" Match="NavLinkMatch.All">Справочник телефонов</NavLink>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" role="button" @onclick="() => ToggleDropdownMenu()">
                    Подразделения
                </a>
                <div class="dropdown-menu @dropDownCssClass">
                    @if (departments is null)
                    {
                        <a class="dropdown-item">Список пуст</a>
                    }
                    else
                    {
                        @foreach (var department in departments.Where(d => d.IsHidden == false))
                        {
                            <a class="dropdown-item" href="/department/@department.DepartmentId" @onclick="() => ToggleDropdownMenu()" @key="department"> @department.Name</a>
                        }
                    }
                </div>
            </li>
        </ul>
        <LoginMenu />
    </div>
</nav>


@code {

    bool collapseNavMenu = true;
    bool collapseDropdownMenu = true;

    string dropDownCssClass => collapseDropdownMenu ? null : "show";
    string navMenuCssClass => collapseNavMenu ? "collapse navbar-collapse" : null;
    List<Department> departments;


    protected async override Task OnInitializedAsync()
    {
        departments = await HttpClient.GetJsonAsync<List<Department>>("api/departments/all");
    }

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    void ToggleDropdownMenu()
    {
        collapseDropdownMenu = !collapseDropdownMenu;
    }
}
