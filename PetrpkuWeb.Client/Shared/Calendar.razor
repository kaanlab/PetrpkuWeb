@using System.Globalization
@inject HttpClient HttpClient


<div class="container">
    <row>
        <h2 class="col-12 mb-2 text-center">График дежурства руководящего состава ППКУ на @currentMonth.ToString("MMMM yyyy").ToLower() г.</h2>
    </row>
    <div class="row d-none d-lg-flex p-1 bg-dark text-white">
        @if (daysOfWeek != null)
        {
            @foreach (var weekday in daysOfWeek)
            {
                <div class="col-lg p-1 text-center">@weekday</div>
            }
        }
    </div>

    <div class="row border border-right-0 border-bottom-0">
        @if (days != null)
        {
            @foreach (var day in days)
            {

                if (day.DayOfWeek == DayOfWeek.Monday && day != startDate)
                {
                    <div class="w-100"></div>
                }

                <div class="col-lg p-2 border border-left-0 border-top-0 @(day.Month != currentMonth.Month ? mutedClass : null)">
                    <h5 class="row align-items-center">
                        <span class="col-1">@day.Day</span>
                    </h5>
                    @if (listOfDuty != null)
                    {
                        <div style="min-height:5rem;">
                            @foreach (var user in listOfDuty)
                            {
                                if (user.DayOfDuty.Day == day.Day)
                                {
                                    <img src="@user.AssignedTo.PhotoUrl" class="rounded-circle mr-3" style="width: 3rem;">
                                    <h5 class="mt-0">@user.AssignedTo.LastName</h5>
                                    <p class="card-text"><small class="text-muted"> @user.AssignedTo.WorkingPosition</small></p>
                                }
                            }
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>

@code {

    [Parameter] public int Month { get; set; }
    [Parameter] public int Year { get; set; }

    List<Duty> listOfDuty;
    List<string> daysOfWeek;
    List<DateTime> days;
    DateTime startDate;
    DateTime currentMonth;

    string mutedClass = "d-none d-lg-inline-block bg-light text-muted";

    protected async override Task OnInitAsync()
    {
        listOfDuty = await HttpClient.GetJsonAsync<List<Duty>>($"/api/duty/month/{Month}/{Year}");

        daysOfWeek = Enum.GetValues(typeof(DayOfWeek))
            .Cast<DayOfWeek>()
            .OrderBy(day => day < DayOfWeek.Monday)
            .Select(d => CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(d)).ToList();

        currentMonth = new DateTime(Year, Month, 1);
        startDate = currentMonth.AddDays(1 - (int)currentMonth.DayOfWeek);
        days = Enumerable.Range(0, 42).Select(i => startDate.AddDays(i)).ToList();

    }
}