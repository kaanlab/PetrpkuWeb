@inject HttpClient HttpClient


<ForeachTemplate Loader="@LoadArticles">
    <LoadingContent>
        <div class="spinner-border text-primary text-center" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </LoadingContent>
    <EmptyContent>
        <div class="card border-danger mb-3">
            <div class="card-body">
                <p class="card-text">новостей нет</p>
            </div>
        </div>
    </EmptyContent>
    <ItemContent Context="item">
        <div class="card @BorderCss(item) mb-2">
            <div class="card-body">
                <h5 class="card-title">@item.Title</h5>
                <p class="card-text">@item.Content</p>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="media col-8">
                        <img src="@item.Author.PhotoUrl" class="rounded-circle mr-3" style="width: 3rem;">
                        <div class="media-body">
                            <p class="mt-0">@item.Author.FirstName @item.Author.LastName</p>
                            <p class="card-text"><small class="text-muted"> @item.PublishDate</small></p>
                        </div>
                    </div>
                    @if (item.Attachments.Any())
                    {
                        <div class="col-4">
                            <small class="text-muted">Файлы: <span class="badge badge-pill badge-secondary">@item.Attachments.Count()</span></small>
                        </div>
                    }
                    <a class="stretched-link" href="/article/@item.ArticleId"></a>
                </div>
            </div>
        </div>
    </ItemContent>
</ForeachTemplate>


@code {

async Task<List<Article>> LoadArticles()
    {
        return await HttpClient.GetJsonAsync<List<Article>>("api/articles/all");
    }

    public string BorderCss(Article article)
    {
        switch (article.Name)
        {
            case Article.Style.Warning: return "border-warning";
            case Article.Style.Danger: return "border-danger";
            case Article.Style.Info: return "border-info";
        }

        return String.Empty;
    }
}
